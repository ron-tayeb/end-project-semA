[{"D:\\UserFiles\\Desktop\\desktop\\FullStack\\EndProjectReact\\endproject\\src\\index.js":"1","D:\\UserFiles\\Desktop\\desktop\\FullStack\\EndProjectReact\\endproject\\src\\App.js":"2","D:\\UserFiles\\Desktop\\desktop\\FullStack\\EndProjectReact\\endproject\\src\\reportWebVitals.js":"3","D:\\UserFiles\\Desktop\\desktop\\FullStack\\EndProjectReact\\endproject\\src\\Components\\Main.jsx":"4","D:\\UserFiles\\Desktop\\desktop\\FullStack\\EndProjectReact\\endproject\\src\\Components\\Theme.jsx":"5","D:\\UserFiles\\Desktop\\desktop\\FullStack\\EndProjectReact\\endproject\\src\\Components\\Register.jsx":"6","D:\\UserFiles\\Desktop\\desktop\\FullStack\\EndProjectReact\\endproject\\src\\Components\\Login.jsx":"7","D:\\UserFiles\\Desktop\\desktop\\FullStack\\EndProjectReact\\endproject\\src\\Components\\MyRecipes.jsx":"8","D:\\UserFiles\\Desktop\\desktop\\FullStack\\EndProjectReact\\endproject\\src\\Components\\Recipes.jsx":"9","D:\\UserFiles\\Desktop\\desktop\\FullStack\\EndProjectReact\\endproject\\src\\Components\\Recipe.jsx":"10","D:\\UserFiles\\Desktop\\desktop\\FullStack\\EndProjectReact\\endproject\\src\\Components\\Admin.jsx":"11","D:\\UserFiles\\Desktop\\desktop\\FullStack\\EndProjectReact\\endproject\\src\\Components\\About.jsx":"12"},{"size":782,"mtime":1611692682237,"results":"13","hashOfConfig":"14"},{"size":401,"mtime":1611736089836,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":499162500000,"results":"16","hashOfConfig":"14"},{"size":9364,"mtime":1612982644996,"results":"17","hashOfConfig":"14"},{"size":10035,"mtime":1612981797935,"results":"18","hashOfConfig":"14"},{"size":6002,"mtime":1612979168437,"results":"19","hashOfConfig":"14"},{"size":4242,"mtime":1612982258648,"results":"20","hashOfConfig":"14"},{"size":5687,"mtime":1612982919418,"results":"21","hashOfConfig":"14"},{"size":7042,"mtime":1612983440597,"results":"22","hashOfConfig":"14"},{"size":4390,"mtime":1612983211839,"results":"23","hashOfConfig":"14"},{"size":7114,"mtime":1612979158250,"results":"24","hashOfConfig":"14"},{"size":4943,"mtime":1612981900228,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"czhj6l",{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"28"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"28"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"28"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"28"},"D:\\UserFiles\\Desktop\\desktop\\FullStack\\EndProjectReact\\endproject\\src\\index.js",[],["61","62"],"D:\\UserFiles\\Desktop\\desktop\\FullStack\\EndProjectReact\\endproject\\src\\App.js",["63"],"import './App.css';\nimport { Button } from 'react-bootstrap';\nimport { withRouter } from \"react-router-dom\";\nimport React, { Component } from 'react'\nimport Main from './Components/Main';\n\n class App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"App-header\"> \n          <Main/>\n        </div>\n      </div>\n    )\n  }\n}\nexport default withRouter(App);","D:\\UserFiles\\Desktop\\desktop\\FullStack\\EndProjectReact\\endproject\\src\\reportWebVitals.js",[],"D:\\UserFiles\\Desktop\\desktop\\FullStack\\EndProjectReact\\endproject\\src\\Components\\Main.jsx",["64","65","66","67"],"import React, { Component } from 'react'\r\nimport { Switch, Route, withRouter } from \"react-router-dom\";\r\nimport Register from './Register';\r\nimport Login from './Login';\r\nimport Recipes from './Recipes';\r\nimport MyRecipes from './MyRecipes';\r\n\r\nimport logo from '../img/logo.png';\r\nimport '../css/Recipes.css';\r\nimport Theme from './Theme';\r\nimport Admin from \"./Admin\";\r\nimport About from \"./About\";\r\n\r\nclass Main extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      back: ''\r\n    };\r\n\r\n\r\n  }\r\n  Cheaklogin = (user) => { //קבלת היוזר שהוכנס בדף לוגין וטיפול בפרטים שהוכנסו\r\n    this.setState({\r\n      Notes: []\r\n    })\r\n    if (localStorage.getItem('users')) { // אם יש מערך של יוזרים בלוקל סטורג אז מבצע את הפעולות הבאות\r\n      let storedU = JSON.parse(localStorage.getItem('users')) //מושך למשתנה את כל היוזרים מהלוקל סטורג\r\n      let chekUser = storedU.find(users => users.email === user.email && users.pass === user.pass); //בודק אם האייל שהלקוח הכניס קיים ברשימת האימלים בלוקל\r\n      if (chekUser !== undefined) { //במידה וקיים אימל כזה אז מתבצעות הפעולות הבאות\r\n        let users = JSON.parse(localStorage.getItem('users'))// לוקח את מערך היוזרים מהלוקל\r\n        let lodin1 = JSON.parse(sessionStorage.getItem('user:')) // לוקח את היוזר שמחובר מהסיישן \r\n        let i1 = users.findIndex(em => em.email === lodin1.email) // משתנה שבודק באיזה מקום במערך בלוקל נמצא המשתנה שהתחבר כעת\r\n        let u = users[i1]; // משתנה שמושך אליו רק את אותו יוזר שהתחבר\r\n        var user = { email: users[i1].email , pass: users[i1].pass , userName: users[i1].userName }\r\n        sessionStorage.setItem('user:', JSON.stringify(user))\r\n        let Lnotes = u.notes\r\n        this.setState({\r\n          Notes: Lnotes\r\n        })\r\n        this.props.history.push({ //עובר לדף מתכונים\r\n          pathname: '/Recipes'\r\n        });\r\n      }\r\n      else { alert(\"Details are incorrect, please try again or register\") } //טיפול במידה והאימל שהוכנס בלוגין לא קיים במערך בלוקל סטורג\r\n    }\r\n    else { // טיפול במידה ולא קיים אף מערך בלוקל סטורג\r\n      alert(\"please Register\")\r\n    }\r\n  }\r\n\r\n  CheakRegister1 = (user) => { // קבלת המערך שהוכנס בדך התחברות\r\n\r\n   \r\n    if (localStorage.getItem('users')) { //בדיקה אם קיים בלוקל מערך של יוזרים\r\n      let storedU = JSON.parse(localStorage.getItem('users'))// במידה וקיים אז הוא מושך מהלוקל את כל היוזרים למשתנה זה\r\n      let chekUser = storedU.find(users => users.email === user.email); // בודק אם קיים איימל כזה בלוקל \r\n      if (chekUser === undefined) { // במידה ולא קיים איימל שהוא הכניס בלוקל סטורג מתבצעות הפעולות הבאות\r\n        if (user.pass === user.pass1) { // בדיקה אם הסיסמא תואמת לאימות סיסמה \r\n          var newUser = { email: user.email, pass: user.pass , userName: user.userName } //במידה וכן הפרטים שלו נכנסים ליוזר חדש\r\n          storedU = [...storedU, newUser] // אותו יוזר נוסך למערך הקודם פלוס אותו יוזר\r\n          localStorage.setItem('users', JSON.stringify(storedU)) //עדכון המערך החדש בלוקל סטורג\r\n          this.props.history.push({//מערב לדף לוגין\r\n            pathname: '/Admin'\r\n          });\r\n        }\r\n        else { // טיפול במקרה שהסיסמאות לא זהות \r\n          if (user.pass === undefined || user.pass1 === undefined || user.email === undefined) { // בדיקה שכלום לא ריק בטעות\r\n            alert(\"Please enter data\")\r\n          }\r\n          else { alert(\"Passwords do not match Try again\") } // טיפול בסיסמאות לא תואמות\r\n        }\r\n      }\r\n      else { // טיפול במידה והאיימל קיים במערך שבלוקל סטורג\r\n        alert(\"Unfortunately, this email exists in the system\")\r\n      }\r\n    }\r\n    else { // במידה ולא קיים שום מערך בלוקל סטורג\r\n      var newUser = { email: user.email, pass: user.pass , userName: user.userName } // הכנסת הנותנים לתוך מערך\r\n      if (user.pass === user.pass1 && user.email !== undefined) { //  בדיקה שהאימל לא ריק ושהסיסמאות זהות\r\n        if (user.pass !== undefined || user.pass1 !== undefined) { // בדיקה ואף תיבה לא ריקה\r\n          localStorage.setItem('users', JSON.stringify([newUser])) //הכנסת הפרטים ללוקל סטורג\r\n          this.props.history.push({//חזרה לדף התחברות\r\n            pathname: '/Admin'\r\n          })\r\n        }\r\n      }\r\n      else {\r\n        if (user.pass === undefined || user.pass1 === undefined || user.email === undefined) {//במידה והאיימל ריק או הסיסמאות ריקות\r\n          alert(\"Please enter data\")\r\n        }\r\n        alert(\"Passwords do not match Try again \")//במידה והסיסמאות פשוט לא זהות \r\n      }\r\n    }\r\n  }\r\n\r\n  CheakRegister = (user) => { // קבלת המערך שהוכנס בדך התחברות\r\n\r\n    if (localStorage.getItem('users')) { //בדיקה אם קיים בלוקל מערך של יוזרים\r\n      let storedU = JSON.parse(localStorage.getItem('users'))// במידה וקיים אז הוא מושך מהלוקל את כל היוזרים למשתנה זה\r\n      let chekUser = storedU.find(users => users.email === user.email); // בודק אם קיים איימל כזה בלוקל \r\n      if (chekUser === undefined) { // במידה ולא קיים איימל שהוא הכניס בלוקל סטורג מתבצעות הפעולות הבאות\r\n        if (user.pass === user.pass1) { // בדיקה אם הסיסמא תואמת לאימות סיסמה \r\n          var newUser = { email: user.email, pass: user.pass , userName: user.userName } //במידה וכן הפרטים שלו נכנסים ליוזר חדש\r\n          storedU = [...storedU, newUser] // אותו יוזר נוסך למערך הקודם פלוס אותו יוזר\r\n          localStorage.setItem('users', JSON.stringify(storedU)) //עדכון המערך החדש בלוקל סטורג\r\n          this.props.history.push({//מערב לדף לוגין\r\n            pathname: '/'\r\n          });\r\n        }\r\n        else { // טיפול במקרה שהסיסמאות לא זהות \r\n          if (user.pass === undefined || user.pass1 === undefined || user.email === undefined) { // בדיקה שכלום לא ריק בטעות\r\n            alert(\"Please enter data\")\r\n          }\r\n          else { alert(\"Passwords do not match Try again\") } // טיפול בסיסמאות לא תואמות\r\n        }\r\n      }\r\n      else { // טיפול במידה והאיימל קיים במערך שבלוקל סטורג\r\n        alert(\"Unfortunately, this email exists in the system\")\r\n      }\r\n    }\r\n    else { // במידה ולא קיים שום מערך בלוקל סטורג\r\n      var newUser = { email: user.email, pass: user.pass , userName: user.userName } // הכנסת הנותנים לתוך מערך\r\n      if (user.pass === user.pass1 && user.email !== undefined) { //  בדיקה שהאימל לא ריק ושהסיסמאות זהות\r\n        if (user.pass !== undefined || user.pass1 !== undefined) { // בדיקה ואף תיבה לא ריקה\r\n          localStorage.setItem('users', JSON.stringify([newUser])) //הכנסת הפרטים ללוקל סטורג\r\n          this.props.history.push({//חזרה לדף התחברות\r\n            pathname: '/'\r\n          })\r\n        }\r\n      }\r\n      else {\r\n        if (user.pass === undefined || user.pass1 === undefined || user.email === undefined) {//במידה והאיימל ריק או הסיסמאות ריקות\r\n          alert(\"Please enter data\")\r\n        }\r\n        alert(\"Passwords do not match Try again \")//במידה והסיסמאות פשוט לא זהות \r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  setTheme = () => {// פונקציה להחלת רקע הדף\r\n    var r = sessionStorage.getItem('color')\r\n    this.setState({ back: r })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div onLoad={this.setTheme}>\r\n        <Switch>\r\n          <Route exact path=\"/\" render={() => <Login Cheaklogin={this.Cheaklogin} />} />\r\n          <Route path=\"/Recipes\" render={() => <Recipes CheakNotes={this.CheakNotes}  />} />\r\n          <Route path=\"/register\" render={() => <Register CheakRegister={this.CheakRegister} />}></Route>\r\n          <Route path=\"/MyRecipes\" render={() => <MyRecipes z={this.state.Notes} deleteEvint={this.deleteEvint} local={this.local} />} />\r\n          <Route path=\"/Theme\" component={Theme} />\r\n          <Route path=\"/About\" component={About} />\r\n          <Route path=\"/Admin\" render={() => <Admin CheakRegister1={this.CheakRegister1} />}></Route>\r\n        </Switch>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(Main);","D:\\UserFiles\\Desktop\\desktop\\FullStack\\EndProjectReact\\endproject\\src\\Components\\Theme.jsx",["68","69","70","71","72","73"],"import React, { Component, useEffect, useState } from 'react';\r\nimport { withRouter, Link } from \"react-router-dom\";\r\nimport '../css/recipeBox.css';\r\nimport { Button, Form, Navbar, Nav, Jumbotron, Container, Modal, Image, Col, Row } from 'react-bootstrap';\r\nimport { MDBCol, MDBContainer, MDBRow, MDBFooter } from \"mdbreact\";\r\nimport jumb from '../img/jumb.png';\r\nimport logo from '../img/logo.png';\r\nimport theme from '../img/theme1.png';\r\nimport theme2 from '../img/theme2.png';\r\nimport theme3 from '../img/theme3.png';\r\nimport theme4 from '../img/theme4.png';\r\nimport theme5 from '../img/theme5.png';\r\nimport theme6 from '../img/theme6.png';\r\nimport theme7 from '../img/theme7.png';\r\nimport theme8 from '../img/theme8.png';\r\nimport theme9 from '../img/theme9.png';\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst Theme = () => {  // קבלת הנתונים מהאבא והצגתם\r\n    const [back, setBack] = useState()\r\n    const [font, setFont] = useState()\r\n    const [body, setbody] = useState()\r\n\r\n    const allTheme = () => {\r\n        sessionStorage.setItem('color', \"#E3B5A4\")\r\n        var r = sessionStorage.getItem('color')\r\n        sessionStorage.setItem('font', \"#773344\")\r\n        var f = sessionStorage.getItem('font')\r\n        sessionStorage.setItem('body', \"#F0DAD1\")\r\n        var b = sessionStorage.getItem('body')\r\n        setFont(f)\r\n        setBack(r)\r\n        setbody(b)\r\n    }\r\n\r\n    const allTheme1 = () => {\r\n        sessionStorage.setItem('color', \"#ffdbb5\")\r\n        var r = sessionStorage.getItem('color')\r\n        sessionStorage.setItem('font', \"#595959\")\r\n        var f = sessionStorage.getItem('font')\r\n        sessionStorage.setItem('body', \" #fdfbfb\")\r\n        var b = sessionStorage.getItem('body')\r\n        setbody(b)\r\n        setFont(f)\r\n        setBack(r)\r\n    }\r\n\r\n    const allTheme2 = () => {  ///מוכן \r\n        sessionStorage.setItem('color', \"#f79d94\")\r\n        var r = sessionStorage.getItem('color')\r\n        sessionStorage.setItem('font', \"#fff0e0\")\r\n        var f = sessionStorage.getItem('font')\r\n        sessionStorage.setItem('body', \" #fad0c4\")\r\n        var b = sessionStorage.getItem('body')\r\n        setbody(b)\r\n        setFont(f)\r\n        setBack(r)\r\n    }\r\n\r\n    const allTheme3 = () => {\r\n        sessionStorage.setItem('color', \"#ccf3ff\")\r\n        var r = sessionStorage.getItem('color')\r\n        sessionStorage.setItem('font', \"#616161\")\r\n        var f = sessionStorage.getItem('font')\r\n        sessionStorage.setItem('body', \" #fdfcfb\")\r\n        var b = sessionStorage.getItem('body')\r\n        setbody(b)\r\n        setFont(f)\r\n        setBack(r)\r\n    }\r\n\r\n    const allTheme4 = () => {\r\n        sessionStorage.setItem('color', \"#ffe7ab\")\r\n        var r = sessionStorage.getItem('color')\r\n        sessionStorage.setItem('font', \"#2b2b2b\")\r\n        var f = sessionStorage.getItem('font')\r\n        sessionStorage.setItem('body', \" #e8e3d5\")\r\n        var b = sessionStorage.getItem('body')\r\n        setbody(b)\r\n        setFont(f)\r\n        setBack(r)\r\n    }\r\n\r\n    const allTheme5 = () => {\r\n        sessionStorage.setItem('color', \"#363636\")\r\n        var r = sessionStorage.getItem('color')\r\n        sessionStorage.setItem('font', \"#c9c9c9\")\r\n        var f = sessionStorage.getItem('font')\r\n        sessionStorage.setItem('body', \" #e6e1e1\")\r\n        var b = sessionStorage.getItem('body')\r\n        setbody(b)\r\n        setFont(f)\r\n        setBack(r)\r\n    }\r\n\r\n    const allTheme6 = () => {\r\n        sessionStorage.setItem('color', \"#4d4d4d\")\r\n        var r = sessionStorage.getItem('color')\r\n        sessionStorage.setItem('font', \"#69cf9e\")\r\n        var f = sessionStorage.getItem('font')\r\n        sessionStorage.setItem('body', \" #d4ffea\")\r\n        var b = sessionStorage.getItem('body')\r\n        setbody(b)\r\n        setFont(f)\r\n        setBack(r)\r\n    }\r\n\r\n    const allTheme7 = () => {\r\n        sessionStorage.setItem('color', \"#e6c7ff\")\r\n        var r = sessionStorage.getItem('color')\r\n        sessionStorage.setItem('font', \"#616161\")\r\n        var f = sessionStorage.getItem('font')\r\n        sessionStorage.setItem('body', \" #f8f0ff\")\r\n        var b = sessionStorage.getItem('body')\r\n        setbody(b)\r\n        setFont(f)\r\n        setBack(r)\r\n    }\r\n\r\n    const allTheme8 = () => {\r\n        sessionStorage.setItem('color', \"#40a3ff\")\r\n        var r = sessionStorage.getItem('color')\r\n        sessionStorage.setItem('font', \"#3d3d3d\")\r\n        var f = sessionStorage.getItem('font')\r\n        sessionStorage.setItem('body', \" #5c5c5c\")\r\n        var b = sessionStorage.getItem('body')\r\n        setbody(b)\r\n        setFont(f)\r\n        setBack(r)\r\n    }\r\n\r\n    const clearSeassion = () => {\r\n        sessionStorage.setItem('color', \"\")\r\n        sessionStorage.setItem('font', \"\")\r\n        sessionStorage.setItem('body', \"\")\r\n    }\r\n\r\n    const thisLoad = () => {\r\n        var r = sessionStorage.getItem('color')\r\n        var f = sessionStorage.getItem('font')\r\n        var b = sessionStorage.getItem('body')\r\n        setbody(b)\r\n        setFont(f)\r\n        setBack(r)\r\n    }\r\n\r\n\r\n    return (\r\n        <div onLoad={thisLoad} style={{ backgroundColor: body }}  >\r\n            <Navbar style={{ backgroundColor: back }} className=\"nav\" id=\"teststyle\" variant=\"light\" >\r\n                <Navbar.Brand href=\"#home\" style={{ color: \"black\" }}><img className=\"logo\" src={logo} alt=\"\" /></Navbar.Brand>\r\n                <Nav className=\"mr-auto\" >\r\n                    <Nav.Link className=\"navB\" style={{ color: font }} onClick={clearSeassion}><Link className=\"navB\" style={{ color: font }} to=\"/\">log out /</Link></Nav.Link>\r\n                    <Nav.Link className=\"navB\" style={{ color: font }}><Link className=\"navB\" style={{ color: font }} to=\"/MyRecipes\">My Recipes /</Link></Nav.Link>\r\n                    <Nav.Link className=\"navB\" style={{ color: font }}><Link className=\"navB\" style={{ color: font }} to=\"/Recipes\">Recipes /</Link></Nav.Link>\r\n                </Nav>\r\n            </Navbar>\r\n            <Jumbotron className=\"section\" fluid>\r\n                <Container>\r\n                    <img src={jumb} className=\"jumb\" />\r\n                    <p>\r\n                        This is a modified jumbotron that occupies the entire horizontal space of\r\n                        its parent.\r\n                    </p>\r\n\r\n                </Container>\r\n            </Jumbotron>\r\n            <Jumbotron fluid>\r\n\r\n                <h1>try to change your style of page</h1>\r\n\r\n            </Jumbotron>\r\n            <div className=\"themeDiv\">\r\n                <Container style={{ marginTop: \"50px\" }}>\r\n                    <Row >\r\n                        <Col className=\"rrr\" >\r\n                            <Image className=\"theme\" src={theme2} rounded onClick={allTheme2} />\r\n                        </Col>\r\n                        <Col className=\"rrr\" >\r\n                            <Image className=\"theme\" src={theme3} rounded onClick={allTheme1} />\r\n                        </Col>\r\n                        <Col className=\"rrr\" >\r\n                            <Image className=\"theme\" src={theme4} rounded onClick={allTheme} />\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n                <Container style={{ marginTop: \"50px\" }}>\r\n                    <Row>\r\n                        <Col className=\"rrr\" >\r\n                            <Image className=\"theme\" src={theme5} rounded onClick={allTheme3} />\r\n                        </Col>\r\n                        <Col className=\"rrr\" >\r\n                            <Image className=\"theme\" src={theme6} rounded onClick={allTheme4} />\r\n                        </Col>\r\n                        <Col className=\"rrr\" >\r\n                            <Image className=\"theme\" src={theme} rounded onClick={allTheme5} />\r\n                        </Col>\r\n\r\n                    </Row>\r\n                </Container>\r\n                <Container style={{ marginTop: \"50px\" }}>\r\n                    <Row>\r\n                        <Col className=\"rrr\" >\r\n                            <Image className=\"theme\" src={theme7} rounded onClick={allTheme6} />\r\n                        </Col>\r\n                        <Col className=\"rrr\" >\r\n                            <Image className=\"theme\" src={theme8} rounded onClick={allTheme7} />\r\n                        </Col>\r\n                        <Col className=\"rrr\" >\r\n                            <Image className=\"theme\" src={theme9} rounded onClick={allTheme8} />\r\n                        </Col>\r\n\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n\r\n\r\n            <Modal >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Oops</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body> this recipe is already on the page \" my recipes \"</Modal.Body>\r\n                <Modal.Footer>\r\n                    <button className=\"btnt\">Close</button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n            <div style={{ backgroundColor: back }} id=\"teststyle1\" className=\"footer\">\r\n                <MDBFooter className=\"font-small pt-4 mt-4\">\r\n                    <MDBContainer fluid className=\"text-center text-md-left\">\r\n                        <MDBRow>\r\n                            <MDBCol className=\"fotercolor\" md=\"6\">\r\n                                <h5 className=\"title\" style={{ color: font }}>check recipes</h5>\r\n                                <p style={{ color: font }}>\r\n                                    On this site every little person can be a big chef !\r\n                               </p>\r\n                            </MDBCol>\r\n\r\n                        </MDBRow>\r\n                    </MDBContainer>\r\n                    <div className=\"copyritght\">\r\n                        <MDBContainer fluid style={{ color: font }}>\r\n                            &copy; {new Date().getFullYear()} Copyright: ron tayeb\r\n                        </MDBContainer>\r\n                    </div>\r\n                </MDBFooter>\r\n            </div>\r\n\r\n        </div>\r\n\r\n\r\n    );\r\n};\r\n\r\n\r\nexport default Theme;\r\n","D:\\UserFiles\\Desktop\\desktop\\FullStack\\EndProjectReact\\endproject\\src\\Components\\Register.jsx",["74"],"import React, { Component } from 'react'\r\nimport { withRouter, Link } from \"react-router-dom\";\r\nimport { Form, Navbar, Nav, Jumbotron, Container } from 'react-bootstrap';\r\nimport { MDBCol, MDBContainer, MDBRow, MDBFooter } from \"mdbreact\";\r\nimport '../css/Recipes.css';\r\nimport logo from '../img/logo.png';\r\nimport jumb from '../img/jumb.png';\r\n\r\n\r\n\r\nclass Register extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            noteL: [],\r\n        };\r\n    }\r\n\r\n    chgEmail1 = (e) => { // קליטת הערך בתייבת איימל\r\n        this.setState({ email: e.target.value })\r\n    }\r\n    chguser = (e) => {\r\n        this.setState({ userName: e.target.value })\r\n    }\r\n\r\n    chgPass = (e) => { // קליטת הערך בתיבת סיסמא\r\n        this.setState({ pass: e.target.value })\r\n        console.log(this.state.pass)\r\n    }\r\n\r\n    chgPass1 = (e) => { //קליטת הערך בתיבת אימות סיסמא\r\n        this.setState({ pass1: e.target.value })\r\n        console.log(this.state.pass1)\r\n    }\r\n\r\n\r\n    btnRegister = () => { // ביצוע פעולות נדרשות בעת לחיצה על כפתור התחברות\r\n        var user = { email: this.state.email, pass: this.state.pass, pass1: this.state.pass1, userName: this.state.userName } // הכנסת הערכים שהוכנסו למערך \r\n        var regex = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/; // שימוש בריגיקס\r\n        var pasRegex = /^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[^\\w\\s]).{8,}$/;\r\n        if (!(regex.test(user.email))) {\r\n            alert(\"enter an email address in the correct format , like name@example.com\")\r\n            return\r\n        }\r\n        if (!(pasRegex.test(user.pass))) {\r\n            alert(\"enter an password in the correct format => at least 8 characters, at least 1 numeric character, at least 1 lowercase letter, at least 1 uppercase letter at least 1 special character, like ==> Pa$$w0rd\")\r\n            return\r\n        }\r\n        if (user.pass === undefined) { //בדיקה שהוא לא פספס תיבה \r\n            alert(\"Please enter data\")\r\n            return\r\n        }\r\n        if (user.email === undefined) {  //בדיקה שהוא לא פספס תיבה  \r\n            alert(\"Please enter data\")\r\n            return\r\n        }\r\n        if (user.pass === undefined) { //בדיקה שהוא לא פספס תיבה \r\n            alert(\"Please enter data\")\r\n            return\r\n        }\r\n        else { // שליחת המערך דרך פרופס \r\n            this.props.CheakRegister(user)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <>\r\n                    <Navbar variant=\"light\" className=\"nav\">\r\n                        <Navbar.Brand href=\"#home\" style={{ color: \"black\" }}><img className=\"logo\" src={logo} alt=\"\" /></Navbar.Brand>\r\n                        <Nav className=\"mr-auto\">\r\n                            <Nav.Link className=\"navB\"><Link className=\"navB\"  to=\"/\">login /</Link></Nav.Link>\r\n                            <Nav.Link className=\"navB\"><Link className=\"navB\"  to=\"/About\">about us /</Link></Nav.Link>\r\n                        </Nav>\r\n                    </Navbar>\r\n                </>\r\n                <Jumbotron className=\"section\" fluid>\r\n                    <Container>\r\n                        <img src={jumb} className=\"jumb\" />\r\n                        <h2>\r\n                            Start now!\r\n                            Learn how to be a great chef with a variety of recipes\r\n                        </h2>\r\n                    </Container>\r\n                </Jumbotron>\r\n                <div>\r\n                    <Form.Group controlId=\"formBasicEmail\">\r\n                        <Form.Label>Email address:</Form.Label>\r\n                        <Form.Control style={{ width: 250, margin: 'auto' }} type=\"email\" placeholder=\"Enter email\" onChange={this.chgEmail1} />\r\n                        <Form.Label>user name:</Form.Label>\r\n                        <Form.Control style={{ width: 250, margin: 'auto' }} type=\"user\" placeholder=\"Enter username\" onChange={this.chguser} />\r\n                        <Form.Label>Password:</Form.Label>\r\n                        <Form.Control style={{ width: 250, margin: 'auto' }} type=\"password\" placeholder=\"Password\" onChange={this.chgPass} />\r\n                        <Form.Label>confirm password:</Form.Label>\r\n                        <Form.Control style={{ width: 250, margin: 'auto' }} type=\"password\" placeholder=\"Password\" onChange={this.chgPass1} />\r\n                    </Form.Group>\r\n                    <button style={{ backgroundColor: this.state.back }} onClick={this.btnRegister} className=\"btnt\">Register</button>\r\n                </div>\r\n                <div style={{ backgroundColor: this.state.back }} id=\"teststyle1\" className=\"footer\">\r\n                    <MDBFooter className=\"font-small pt-4 mt-4\">\r\n                        <MDBContainer fluid className=\"text-center text-md-left\">\r\n                            <MDBRow>\r\n                                <MDBCol md=\"6\">\r\n                                    <h5 className=\"title\" style={{ color: \"black\" }}>check recipes</h5>\r\n                                    <p style={{ color: \"black\" }}>\r\n                                        On this site every little person can be a big chef !\r\n                               </p>\r\n                                </MDBCol>\r\n\r\n                            </MDBRow>\r\n                        </MDBContainer>\r\n                        <div className=\"footer-copyright text-center py-3\">\r\n                            <MDBContainer fluid style={{ color: \"black\" }}>\r\n                                &copy; {new Date().getFullYear()} Copyright: ron tayeb\r\n                        </MDBContainer>\r\n                        </div>\r\n                    </MDBFooter>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default withRouter(Register)\r\n","D:\\UserFiles\\Desktop\\desktop\\FullStack\\EndProjectReact\\endproject\\src\\Components\\Login.jsx",["75","76"],"import React, { Component } from 'react'\r\nimport { withRouter, Link } from \"react-router-dom\";\r\nimport { Button, Form, Navbar, Nav, Jumbotron, Container } from 'react-bootstrap';\r\nimport { MDBCol, MDBContainer, MDBRow, MDBFooter } from \"mdbreact\";\r\n\r\nimport '../css/Recipes.css';\r\nimport logo from '../img/logo.png';\r\nimport jumb from '../img/jumb.png';\r\n\r\nclass Login extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      back: ''\r\n    };\r\n  }\r\n\r\n\r\n  chgEmail = (e) => { //פונקציה שלוקחת את הערך שבתיבת איימל\r\n    this.setState({ email: e.target.value })\r\n  }\r\n  chgPass = (e) => { //פונקציה שלוקחת את הערך שבתיבת סיסמא\r\n    this.setState({ pass: e.target.value })\r\n  }\r\n  btnlogin = () => { //פונקציה ששולחת את הערכים שהוכנסו באימל וסיסמא ושולחת אותם דרך פרופס\r\n    if (this.state.email === \"admin\" && this.state.pass === \"admin\") {\r\n      this.props.history.push({\r\n        pathname: '/Admin'\r\n      })\r\n      return\r\n    }\r\n    var user = { email: this.state.email, pass: this.state.pass }//יצירת משתמש  \r\n    sessionStorage.setItem('user:', JSON.stringify(user)) // העלתו לסיישן\r\n    sessionStorage.setItem('notes:', JSON.stringify(''))\r\n    JSON.parse(sessionStorage.getItem('user'))\r\n    this.props.Cheaklogin(user)//שליחתו למיין דרך הפרופס\r\n  }\r\n\r\n\r\n\r\n  setTheme = () => { // פונקציה להחלת הצבע רקע של האתר\r\n    var r = sessionStorage.getItem('color')\r\n    this.setState({ back: r })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div onLoad={this.setTheme}>\r\n        <>\r\n          <Navbar style={{ backgroundColor: this.state.back }} className=\"nav\" id=\"teststyle\" variant=\"light\" >\r\n            <Navbar.Brand href=\"#home\" style={{ color: \"black\" }}><img className=\"logo\" src={logo} alt=\"\" /></Navbar.Brand>\r\n            <Nav className=\"mr-auto\" >\r\n              <Nav.Link className=\"navB\"><Link className=\"navB\" to=\"/Register\">sign up /</Link></Nav.Link>\r\n              <Nav.Link className=\"navB\"><Link className=\"navB\" to=\"/About\">about us /</Link></Nav.Link>\r\n            </Nav>\r\n          </Navbar>\r\n        </>\r\n        <Jumbotron className=\"section\" fluid>\r\n          <Container>\r\n            <img src={jumb} className=\"jumb\" />\r\n            <h2>\r\n              Log in\r\n              And learn how to be a great chef with the help of a variety of recipes\r\n                        </h2>\r\n          </Container>\r\n        </Jumbotron>\r\n        <div className=\"login\">\r\n          <Form.Group controlId=\"formBasicEmail\">\r\n            <Form.Label>Email address</Form.Label>\r\n            <Form.Control style={{ width: 250, margin: 'auto' }} type=\"email\" placeholder=\"Enter email\" onChange={this.chgEmail} />\r\n          </Form.Group>\r\n          <Form.Group controlId=\"formBasicPassword\">\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control style={{ width: 250, margin: 'auto' }} type=\"password\" placeholder=\"Password\" onChange={this.chgPass} />\r\n          </Form.Group>\r\n          <button style={{ backgroundColor: this.state.back }} onClick={this.btnlogin} className=\"btnt\">Login</button>\r\n        </div>\r\n\r\n        <div style={{ backgroundColor: this.state.back }} id=\"teststyle1\" className=\"footer\">\r\n          <MDBFooter className=\"font-small pt-4 mt-4\">\r\n            <MDBContainer fluid className=\"text-center text-md-left\">\r\n              <MDBRow>\r\n                <MDBCol md=\"6\">\r\n                  <h5 className=\"title\" style={{ color: \"black\" }}>check recipes</h5>\r\n                  <p style={{ color: \"black\" }}>\r\n                    On this site every little person can be a big chef !\r\n                               </p>\r\n                </MDBCol>\r\n\r\n              </MDBRow>\r\n            </MDBContainer>\r\n            <div className=\"footer-copyright text-center py-3\">\r\n              <MDBContainer fluid style={{ color: \"black\" }}>\r\n                &copy; {new Date().getFullYear()} Copyright: ron tayeb\r\n                        </MDBContainer>\r\n            </div>\r\n          </MDBFooter>\r\n        </div>\r\n\r\n      </div>\r\n\r\n    )\r\n  }\r\n}\r\nexport default withRouter(Login);\r\n\r\n\r\n\r\n\r\n","D:\\UserFiles\\Desktop\\desktop\\FullStack\\EndProjectReact\\endproject\\src\\Components\\MyRecipes.jsx",["77"],"import React, { Component } from 'react'\r\nimport { withRouter, Link } from \"react-router-dom\";\r\nimport { Card, Navbar, Nav, Jumbotron, Container } from 'react-bootstrap';\r\nimport { MDBCol, MDBContainer, MDBRow, MDBFooter } from \"mdbreact\";\r\nimport '../css/Recipes.css';\r\nimport '../css/recipeBox.css';\r\nimport logo from '../img/logo.png';\r\nimport jumb from '../img/jumb.png';\r\n\r\n\r\n\r\nclass MyRecipes extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      back: '',\r\n      font: '',\r\n      body: ''\r\n    };\r\n\r\n  }\r\n\r\n  del = (index) => { // מחיקת מתכון מהדף\r\n    let lodin1 = JSON.parse(sessionStorage.getItem('user:')) // הכנסת היוזר שמחובר למשתנה \r\n    let allUsers = JSON.parse(localStorage.getItem('users')) // הנכסת כל מהערך היוזרים למשתנה\r\n    let i = allUsers.findIndex(em => em.email === lodin1.email) // מציאת האינדקס שהיוזר המחובר נמצא במערך השלם\r\n    let lodin = allUsers[i].notes // הכנסת כל התככונים של אותו יוזר למשתנה\r\n    lodin.splice(index, 1) // ביצוע המחיקה\r\n\r\n    let NewUserNote = { email: lodin1.email, pass: lodin1.pass, userName: lodin1.userName, notes: lodin } // יצירת יוזר חדש עם הפרטים המעודכנים\r\n    allUsers[i] = NewUserNote // עדכון היוזר החדש במערך \r\n    localStorage.setItem('users', JSON.stringify(allUsers)) // עדכון המערך השלם בחזרה\r\n    this.props.history.push({ // חזרה לדף הקיים \r\n      pathname: '/MyRecipes'\r\n    })\r\n  }\r\n  setTheme = () => { // פונקציה לערכת נושא\r\n    var r = sessionStorage.getItem('color') // שמירת צבע הרקע\r\n    var f = sessionStorage.getItem('font') // שמירת צבע הכתב\r\n    var b = sessionStorage.getItem('body') // שמירת צבע הנאב והפוטר\r\n\r\n    this.setState({ back: r }) // עדכון הצבעים בסטייט\r\n    this.setState({ font: f })\r\n    this.setState({ body: b })\r\n  }\r\n  clearSeassion = () => { // בעת התנתקות הוא מנקה את היסטורית הצבעים מהסטייא\r\n    sessionStorage.setItem('color', \"\")\r\n    sessionStorage.setItem('font', \"\")\r\n    sessionStorage.setItem('body', \"\")\r\n  }\r\n\r\n\r\n\r\n\r\n  render(\r\n    lodin1 = JSON.parse(sessionStorage.getItem('user:')), // קבלת הנתונים לצורך הצגתם על הדף\r\n    allUsers = JSON.parse(localStorage.getItem('users')),\r\n    i = allUsers.findIndex(em => em.email === lodin1.email),\r\n    lodin = allUsers[i].notes\r\n  ) {\r\n    return (\r\n      <div onLoad={this.setTheme} style={{ backgroundColor: this.state.body }} >\r\n        <>\r\n          <Navbar style={{ backgroundColor: this.state.back }} variant=\"light\" className=\"nav\">\r\n            <Navbar.Brand href=\"#home\" style={{ color: \"black\" }}><img className=\"logo\" src={logo} alt=\"\" /></Navbar.Brand>\r\n            <Nav className=\"mr-auto\">\r\n              <Nav.Link className=\"navB\" style={{ color: this.state.font }} onClick={this.clearSeassion}><Link className=\"navB\" style={{ color: this.state.font }} to=\"/\">log out /</Link></Nav.Link>\r\n              <Nav.Link className=\"navB\" style={{ color: this.state.font }}><Link className=\"navB\" style={{ color: this.state.font }} to=\"/Recipes\">Recipes /</Link></Nav.Link>\r\n              <Nav.Link className=\"navB\" style={{ color: this.state.font }}><Link className=\"navB\" style={{ color: this.state.font }} to=\"/Theme\">Theme /</Link></Nav.Link>\r\n            </Nav>\r\n          </Navbar>\r\n        </>\r\n        <Jumbotron className=\"section\" fluid>\r\n          <Container>\r\n            <img src={jumb} className=\"jumb\" />\r\n            <p>\r\n            On this site every little person can be a big chef !\r\n            </p>\r\n          </Container>\r\n        </Jumbotron>\r\n        <Jumbotron fluid>\r\n          <h1>My Saved Recipes</h1>\r\n        </Jumbotron>\r\n        <div className=\"ron\">\r\n          {lodin !== undefined && lodin.map((e, index) =>\r\n            <Card key={index} className=\"ron1\">\r\n              <Card.Img variant=\"top\" src={e.imag} className=\"imga\" />\r\n              <Card.Body>\r\n                <Card.Text style={{ textAlign: \"left\" }}>\r\n                  <Card.Title>{e.title}</Card.Title>\r\n                  <p>Calories: {e.cal}</p>\r\n                  {e.ing.map(ingredients => (\r\n                    <li>{ingredients}</li>\r\n                  ))}\r\n                </Card.Text>\r\n                <button style={{ backgroundColor: this.state.back, color: this.state.font }} onClick={() => this.del(index)} className=\"btnt\">Delete this recipe</button>\r\n              </Card.Body>\r\n            </Card>)}\r\n        </div>\r\n        <div style={{ backgroundColor: this.state.back }} id=\"teststyle1\" className=\"footer\">\r\n          <MDBFooter className=\"font-small pt-4 mt-4\">\r\n            <MDBContainer fluid className=\"text-center text-md-left\">\r\n              <MDBRow>\r\n                <MDBCol className=\"fotercolor\" md=\"6\">\r\n                  <h5 className=\"title\" style={{ color: this.state.font }}>check recipes</h5>\r\n                  <p style={{ color: this.state.font }}>\r\n                    On this site every little person can be a big chef !\r\n                  </p>\r\n                </MDBCol>\r\n\r\n              </MDBRow>\r\n            </MDBContainer>\r\n            <div className=\"copyritght\">\r\n              <MDBContainer fluid style={{ color: this.state.font }}>\r\n                &copy; {new Date().getFullYear()} Copyright: ron tayeb\r\n                        </MDBContainer>\r\n            </div>\r\n          </MDBFooter>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default withRouter(MyRecipes);\r\n","D:\\UserFiles\\Desktop\\desktop\\FullStack\\EndProjectReact\\endproject\\src\\Components\\Recipes.jsx",["78","79","80","81","82","83","84","85","86","87","88"],"import React, { Component, useEffect, useState } from 'react';\r\nimport { withRouter, Link } from \"react-router-dom\";\r\nimport { Button, Form, Navbar, Nav, Jumbotron, Container, Modal, Fade } from 'react-bootstrap';\r\nimport { MDBCol, MDBContainer, MDBRow, MDBFooter } from \"mdbreact\";\r\nimport Recipe from \"./Recipe\";\r\nimport '../css/Recipes.css';\r\nimport logo from '../img/logo.png';\r\nimport jumb from '../img/jumb.png';\r\nimport NotCosher from '../img/NotCosher.png';\r\n\r\n\r\n\r\n\r\nconst Recipes = () => {\r\n  const APP_ID = '94a00e94'; // api id const\r\n  const APP_KEY = '3240406a2f5833abbb77783f3c07123f'; // api key const\r\n  const r = JSON.parse(sessionStorage.getItem('user:')) \r\n\r\n\r\n  const [show, setShow] = useState(false);\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  const [search, setSearch] = useState('');\r\n  const [recipes, setRecipes] = useState([]);\r\n  const [query, setQuery] = useState('')\r\n  const getRecipes = async () => {\r\n    const response = await fetch(`https://api.edamam.com/search?q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}`\r\n    );\r\n    const data = await response.json();\r\n\r\n    console.log(data, 5855)\r\n    if (data.more == false && data.q != '') { // במידה והרך לא קיים \r\n      document.getElementById(\"alert\").style.display = 'block';\r\n      document.getElementById(\"alert\").innerHTML = \"<strong>Error!</strong> this recipe was not found <br/>Try again\";\r\n    }\r\n    setRecipes(data.hits) // עדכון המתכונים בסטיט\r\n  };\r\n\r\n  useEffect(() => {\r\n    getRecipes();\r\n  }, [query]);\r\n\r\n  const updateSearch = (e) => { // מכניס לסטייט את הערך בשורת חיפוש\r\n    setSearch(e.target.value)\r\n    console.log(search)\r\n\r\n  }\r\n\r\n  const getSearch = e => {\r\n    debugger\r\n    if (search == \"\") { //הצגת הודעה עם הערך בחיפוש ריק\r\n      document.getElementById(\"alert\").style.display = 'block';\r\n      document.getElementById(\"alert\").innerHTML = \"<strong>Error!</strong> please enter data <br/> and Try again\";\r\n      e.preventDefault();\r\n    }\r\n    else { // אם הוא הכניס ערך כלשהו הוא ממשיך \r\n      document.getElementById(\"alert\").style.display = 'none';\r\n      console.log(search, 55555555)\r\n      e.preventDefault();\r\n      setQuery(search)\r\n      setSearch('')\r\n    }\r\n  }\r\n  const clearSeassion = () => {\r\n    sessionStorage.setItem('color', \"\")// עדכון היסטורית ערכת נושא\r\n    sessionStorage.setItem('font', \"\")// עדכון היסטורית ערכת נושא\r\n    sessionStorage.setItem('body', \"\")// עדכון היסטורית ערכת נושא\r\n  }\r\n  const [back, setBack] = useState()// עדכון ערכת נושא\r\n  const [font, setFont] = useState()// עדכון ערכת נושא\r\n  const [body, setbody] = useState()// עדכון ערכת נושא\r\n\r\n  const setTheme = () => {// עדכון ערכת נושא\r\n    var r = sessionStorage.getItem('color')// עדכון ערכת נושא\r\n    var f = sessionStorage.getItem('font')// עדכון ערכת נושא\r\n    var b = sessionStorage.getItem('body')// עדכון ערכת נושא\r\n    setbody(b)// עדכון ערכת נושא\r\n    setFont(f)// עדכון ערכת נושא\r\n    setBack(r)// עדכון ערכת נושא\r\n  }\r\n\r\n\r\n  return (\r\n    <div onLoad={setTheme} style={{ backgroundColor: body }}>\r\n\r\n      <>\r\n        <Modal className=\"modal1\" show={show} onHide={handleClose}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>מידע בנושא כשרות</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body className=\"modal1\">תוכן מתכוני האתר נלקח מבסיס נתונים לא מפוקח מבחינת כשרות ולכן כל מתכוני האתר בחזקת לא כשרים</Modal.Body>\r\n          <Modal.Footer>\r\n            <img className=\"cosher\" src={NotCosher} alt=\"\" />\r\n            <button style={{ backgroundColor: back }} onClick={handleClose} className=\"btnt\">Close</button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n        <Navbar style={{ backgroundColor: back }} variant=\"light\" className=\"nav\">\r\n          <Navbar.Brand href=\"#home\" style={{ color: \"font\" }}><img className=\"logo\" src={logo} alt=\"\" /></Navbar.Brand>\r\n          <Nav style={{ color: font }} className=\"mr-auto\">\r\n            <Nav.Link className=\"navB\" style={{ color: font }} onClick={clearSeassion}><Link className=\"navB\"  style={{ color: font }} to=\"/\">log out /</Link></Nav.Link>\r\n            <Nav.Link className=\"navB\"  style={{ color: font }}><Link className=\"navB\" style={{ color: font }} to=\"/MyRecipes\">My Recipes /</Link></Nav.Link>\r\n            <Nav.Link className=\"navB\" style={{ color: font }}><Link className=\"navB\"  style={{ color: font }} to=\"/Theme\">Theme /</Link></Nav.Link>\r\n            <Nav.Link className=\"navImportent\"  style={{ color: font }} onClick={handleShow} href=\"\">!importent! /</Nav.Link>\r\n          </Nav>\r\n        </Navbar>\r\n      </>\r\n      <Jumbotron className=\"section\" fluid>\r\n        <Container>\r\n          <img src={jumb} className=\"jumb\" />\r\n          <h1>hello {r.userName}</h1>\r\n          <h2>\r\n            On this site every little person can be a big chef !\r\n                    </h2>\r\n        </Container>\r\n      </Jumbotron>\r\n\r\n\r\n      <div className=\"Recipes\">\r\n        <form onSubmit={getSearch} className=\"search-form\">\r\n\r\n          <Form.Control className=\"search-bar\" type=\"text\" value={search} onChange={updateSearch} />\r\n          <button style={{ backgroundColor: back, color: font }} type=\"submit\" className=\"btnt\">Search</button>\r\n          <h1 className=\"search-button\"></h1>\r\n        </form>\r\n        <div id=\"alert\" class=\"alert alert-danger\" style={{ display: 'none' }}>\r\n          <a href=\"#\" class=\"close\" data-dismiss=\"alert\"></a>\r\n\r\n        </div>\r\n\r\n        <div className=\"recipes1\">\r\n          {recipes.map(recipe => (\r\n            <Recipe key={recipe.recipe.label} Title={recipe.recipe.label} Calories={recipe.recipe.calories} ingredients={recipe.recipe.ingredientLines} img={recipe.recipe.image} />\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <div style={{ backgroundColor: back }} id=\"teststyle1\" className=\"footer\">\r\n        <MDBFooter className=\"font-small pt-4 mt-4\">\r\n          <MDBContainer fluid className=\"text-center text-md-left\">\r\n            <MDBRow>\r\n              <MDBCol className=\"fotercolor\" md=\"6\">\r\n                <h5 className=\"title\" style={{ color: font }}>check recipes</h5>\r\n                <p style={{ color: font }}>\r\n                  On this site every little person can be a big chef !\r\n                               </p>\r\n              </MDBCol>\r\n\r\n            </MDBRow>\r\n          </MDBContainer>\r\n          <div className=\"copyritght\">\r\n            <MDBContainer fluid style={{ color: font }}>\r\n              &copy; {new Date().getFullYear()} Copyright: ron tayeb\r\n                        </MDBContainer>\r\n          </div>\r\n        </MDBFooter>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default withRouter(Recipes);\r\n\r\n\r\n\r\n","D:\\UserFiles\\Desktop\\desktop\\FullStack\\EndProjectReact\\endproject\\src\\Components\\Recipe.jsx",["89","90","91","92"],"import React, { Component, useEffect, useState, useRef } from 'react';\r\nimport '../css/recipeBox.css';\r\nimport { Button, Card, Modal, Tooltip, Overlay } from 'react-bootstrap';\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst Recipe = ({ Title, Calories, ingredients, img }) => {  // קבלת הנתונים מהאבא והצגתם\r\n  const [show, setShow] = useState(false); // להצגת המודאל \r\n  const [showTR, setShowTR] = useState(false);// להצגת המודאל\r\n  const target = useRef(null);// להצגת המודאל\r\n\r\n  const AddNotes = () => { // הוספת המתכון לרשימה הפרטית\r\n    let lodin1 = JSON.parse(sessionStorage.getItem('notes:')) // לקיחחת המתכונים השמורים בסיישן \r\n    let notes = { title: Title, cal: Calories, ing: ingredients, imag: img } // לקיחת המתכון הקיים\r\n    let myRecipe = [notes, ...lodin1] //חיבור בין השניים\r\n    sessionStorage.setItem('notes:', JSON.stringify(myRecipe)) // עדכון הסיישן במערך מתכונים החדש\r\n    // הוספה לסיישן הקיים רק מה שהוא לחץ כרגע\r\n\r\n\r\n\r\n    // הוספה ללוקל \r\n    let lodin = JSON.parse(sessionStorage.getItem('user:'))\r\n    let allUsers = JSON.parse(localStorage.getItem('users'))\r\n    let i = allUsers.findIndex(em => em.email === lodin.email)\r\n    if (allUsers[i].notes === undefined) {\r\n      setShowTR(!show)\r\n      let NewUserNote = { email: lodin.email, pass: lodin.pass, userName: allUsers[i].userName, notes: myRecipe }\r\n      allUsers[i] = NewUserNote\r\n      localStorage.setItem('users', JSON.stringify(allUsers))\r\n    }\r\n    else {\r\n      let userN = allUsers[i].notes;\r\n      for (let index = 0; index < userN.length; index++) { //בדיקה אם ערך קיים \r\n        if (allUsers[i].notes[index].title === notes.title) {\r\n          setShow(true)\r\n          return\r\n        }\r\n\r\n      }\r\n      setShowTR(!show) // הצגת באנר הוספה הושלמה\r\n      let t = [notes, ...allUsers[i].notes]\r\n      let NewUserNote = { email: lodin.email, pass: lodin.pass, userName: allUsers[i].userName, notes: t }\r\n      allUsers[i] = NewUserNote\r\n      localStorage.setItem('users', JSON.stringify(allUsers))\r\n    }\r\n  }\r\n  const handleClose = () => setShow(false); //עדכונו \r\n\r\n\r\n\r\n  const [back, setBack] = useState()// עדכון ערכת נושא\r\n  const [font, setFont] = useState()// עדכון ערכת נושא\r\n  const [body, setbody] = useState()// עדכון ערכת נושא\r\n\r\n  const setTheme = () => {// עדכון ערכת נושא\r\n    var r = sessionStorage.getItem('color')// עדכון ערכת נושא\r\n    var f = sessionStorage.getItem('font')// עדכון ערכת נושא\r\n    var b = sessionStorage.getItem('body')// עדכון ערכת נושא\r\n    setbody(b)// עדכון ערכת נושא\r\n    setFont(f)// עדכון ערכת נושא\r\n    setBack(r)// עדכון ערכת נושא\r\n  }\r\n\r\n  return (\r\n    <div onLoad={setTheme} style={{ backgroundColor: body }}>\r\n\r\n      <Modal show={show} onHide={AddNotes} animation={false}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Oops</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body> this recipe is already on the page \" my recipes \"</Modal.Body>\r\n        <Modal.Footer>\r\n          <button style={{ backgroundColor: back, color: font }} onClick={handleClose} className=\"btnt\">Close</button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n\r\n\r\n\r\n\r\n\r\n      <Card className=\"card\">\r\n        <Card.Img variant=\"top\" src={img} className=\"img\" />\r\n        <Card.Body>\r\n          <Card.Text style={{ textAlign: \"left\" }}>\r\n            <Card.Title>{Title}</Card.Title>\r\n            <p>Calories: {Calories.toFixed(2)}</p>\r\n\r\n            {ingredients.map(ingredients => (\r\n              <li>{ingredients}</li>\r\n            ))}\r\n\r\n          </Card.Text>\r\n          <button style={{ backgroundColor: back, color: font }} ref={target} onClick={AddNotes} className=\"btnt\">ADD TO MY RECIPE</button>\r\n\r\n          <Overlay target={target.current} show={showTR} placement=\"right\">\r\n            {(props) => (\r\n              <Tooltip id=\"overlay-example\" {...props}>\r\n                Add recipe successfully\r\n              </Tooltip>\r\n            )}\r\n          </Overlay>\r\n        </Card.Body>\r\n      </Card>\r\n    </div>\r\n\r\n\r\n  );\r\n};\r\n\r\n\r\nexport default Recipe;\r\n","D:\\UserFiles\\Desktop\\desktop\\FullStack\\EndProjectReact\\endproject\\src\\Components\\Admin.jsx",["93","94"],"import React, { Component } from 'react'\r\nimport { withRouter, Link } from \"react-router-dom\";\r\nimport { Form, Table, Navbar, Nav, Jumbotron, Container, CardGroup } from 'react-bootstrap';\r\nimport { MDBCol, MDBContainer, MDBRow, MDBFooter } from \"mdbreact\";\r\nimport '../css/Recipes.css';\r\nimport '../css/recipeBox.css';\r\nimport logo from '../img/logo.png';\r\nimport jumb from '../img/jumb.png';\r\n\r\n\r\nclass Admin extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      back: '',\r\n      font: '',\r\n      body: ''\r\n    };\r\n  }\r\n\r\n  Del = (index) => {\r\n    let allUsers = JSON.parse(localStorage.getItem('users'))\r\n    console.log(allUsers, \"before\")\r\n    allUsers.splice(index, 1)\r\n    console.log(allUsers, \"after\")\r\n    localStorage.setItem('users', JSON.stringify(allUsers))\r\n\r\n    this.props.history.push({\r\n      pathname: '/Admin'\r\n    })\r\n\r\n  }\r\n\r\n  clearSeassion = () => {\r\n    sessionStorage.setItem('color', \"\")\r\n    sessionStorage.setItem('font', \"\")\r\n    sessionStorage.setItem('body', \"\")\r\n  }\r\n\r\n\r\n  chgEmail1 = (e) => { // קליטת הערך בתייבת איימל\r\n    this.setState({ email: e.target.value })\r\n  }\r\n  chguser = (e) => {\r\n    this.setState({ userName: e.target.value })\r\n  }\r\n\r\n  chgPass = (e) => { // קליטת הערך בתיבת סיסמא\r\n    this.setState({ pass: e.target.value })\r\n    console.log(this.state.pass)\r\n  }\r\n\r\n  chgPass1 = (e) => { //קליטת הערך בתיבת אימות סיסמא\r\n    this.setState({ pass1: e.target.value })\r\n    console.log(this.state.pass1)\r\n  }\r\n\r\n  btnRegister = () => { // ביצוע פעולות נדרשות בעת לחיצה על כפתור התחברות\r\n    var user = { email: this.state.email, pass: this.state.pass, pass1: this.state.pass1, userName: this.state.userName } // הכנסת הערכים שהוכנסו למערך \r\n    var regex = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/; // שימוש בריגיקס\r\n    var pasRegex = /^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[^\\w\\s]).{8,}$/;\r\n    if (!(regex.test(user.email))) {\r\n      alert(\"enter an email address in the correct format , like name@example.com\")\r\n      return\r\n    }\r\n    if (!(pasRegex.test(user.pass))) {\r\n      alert(\"enter an password in the correct format => at least 8 characters, at least 1 numeric character, at least 1 lowercase letter, at least 1 uppercase letter at least 1 special character, like ==> Pa$$w0rd\")\r\n      return\r\n    }\r\n    if (user.pass === undefined) { //בדיקה שהוא לא פספס תיבה \r\n      alert(\"Please enter data\")\r\n      return\r\n    }\r\n    if (user.email === undefined) {  //בדיקה שהוא לא פספס תיבה  \r\n      alert(\"Please enter data\")\r\n      return\r\n    }\r\n    if (user.pass === undefined) { //בדיקה שהוא לא פספס תיבה \r\n      alert(\"Please enter data\")\r\n      return\r\n    }\r\n    else { // שליחת המערך דרך פרופס \r\n      this.props.CheakRegister1(user)\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div onLoad={this.setTheme} style={{ backgroundColor: this.state.body }}  >\r\n        <Navbar style={{ backgroundColor: this.state.back }} className=\"nav\" id=\"teststyle\" variant=\"light\" >\r\n          <Navbar.Brand href=\"#home\" style={{ color: \"black\" }}><img className=\"logo\" src={logo} alt=\"\" /></Navbar.Brand>\r\n          <Nav className=\"mr-auto\" >\r\n            <Nav.Link className=\"navB\"><Link className=\"navB\" to=\"/\">login /</Link></Nav.Link>\r\n            <Nav.Link className=\"navB\"><Link className=\"navB\" to=\"/About\">about us /</Link></Nav.Link>\r\n          </Nav>\r\n        </Navbar>\r\n        <Jumbotron className=\"section\" fluid>\r\n          <Container>\r\n            <img src={jumb} className=\"jumb\" />\r\n            <p>\r\n              This is a modified jumbotron that occupies the entire horizontal space of\r\n              its parent.\r\n                        </p>\r\n          </Container>\r\n        </Jumbotron>\r\n        <Jumbotron fluid>\r\n\r\n          <h1>delete users</h1>\r\n\r\n        </Jumbotron>\r\n        <Table striped bordered hover className=\"adminTable\">\r\n          <thead>\r\n            <tr>\r\n              <th>#</th>\r\n              <th>user name</th>\r\n              <th>email</th>\r\n              <th>Password</th>\r\n              <th>delete user</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {JSON.parse(localStorage.getItem('users')).map((e, index) =>\r\n              <tr>\r\n                <td>{index + 1}</td>\r\n                <th>{e.userName}</th>\r\n                <td>{e.email}</td>\r\n                <td>{e.pass}</td>\r\n                <td><button style={{ backgroundColor: this.state.back, color: this.state.font }} onClick={() => this.Del(index)} type=\"submit\" className=\"btnt\" >delete</button></td>\r\n              </tr>\r\n            )}\r\n          </tbody>\r\n        </Table>\r\n        <Jumbotron fluid>\r\n\r\n          <h1>add users</h1>\r\n\r\n        </Jumbotron>\r\n        <div className=\"adminAdd\">\r\n          <Form.Group controlId=\"formBasicEmail\">\r\n            <Form.Label>Email address</Form.Label>\r\n            <Form.Control style={{ width: 550, margin: 'auto', textAlign: \"center\" }} type=\"email\" placeholder=\"Enter email\" onChange={this.chgEmail1} />\r\n            <Form.Label>user name</Form.Label>\r\n            <Form.Control style={{ width: 550, margin: 'auto', textAlign: \"center\" }} type=\"text\" placeholder=\"Enter username\" onChange={this.chguser} />\r\n          </Form.Group>\r\n          <Form.Group controlId=\"formBasicPassword\">\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control style={{ width: 550, margin: 'auto', textAlign: \"center\" }} type=\"password\" placeholder=\"Password\" onChange={this.chgPass} />\r\n            <Form.Label>confirm password</Form.Label>\r\n            <Form.Control style={{ width: 550, margin: 'auto', textAlign: \"center\" }} type=\"password\" placeholder=\"Password\" onChange={this.chgPass1} />\r\n          </Form.Group>\r\n          <button style={{ backgroundColor: this.state.back, width: 400 }} onClick={this.btnRegister} className=\"btnt\">Add user</button>\r\n        </div>\r\n        <div style={{ backgroundColor: this.state.back }} id=\"teststyle1\" className=\"footer\">\r\n          <MDBFooter className=\"font-small pt-4 mt-4\">\r\n            <MDBContainer fluid className=\"text-center text-md-left\">\r\n              <MDBRow>\r\n                <MDBCol className=\"fotercolor\" md=\"6\">\r\n                  <h5 className=\"title\" style={{ color: this.state.font }}>check recipes</h5>\r\n                  <p style={{ color: this.state.font }}>\r\n                    On this site every little person can be a big chef !\r\n                                   </p>\r\n                </MDBCol>\r\n\r\n              </MDBRow>\r\n            </MDBContainer>\r\n            <div className=\"copyritght\">\r\n              <MDBContainer fluid style={{ color: this.state.font }}>\r\n                &copy; {new Date().getFullYear()} Copyright: ron tayeb\r\n                            </MDBContainer>\r\n            </div>\r\n          </MDBFooter>\r\n        </div>\r\n\r\n      </div>\r\n\r\n\r\n    );\r\n  }\r\n}\r\nexport default withRouter(Admin);\r\n","D:\\UserFiles\\Desktop\\desktop\\FullStack\\EndProjectReact\\endproject\\src\\Components\\About.jsx",["95","96","97","98","99","100","101","102","103","104"],"import React, { Component, useEffect, useState } from 'react';\r\nimport { withRouter, Link } from \"react-router-dom\";\r\nimport '../css/recipeBox.css';\r\nimport { Button, Form, Navbar, Nav, Jumbotron, Container, Modal, Image, Col, Row } from 'react-bootstrap';\r\nimport { MDBCol, MDBContainer, MDBRow, MDBFooter } from \"mdbreact\";\r\nimport jumb from '../img/jumb.png';\r\nimport logo from '../img/logo.png';\r\n\r\n\r\n\r\nconst About = () => {  // קבלת הנתונים מהאבא והצגתם\r\n    const [back, setBack] = useState()\r\n    const [font, setFont] = useState()\r\n    const [body, setbody] = useState()\r\n\r\n    const clearSeassion = () => {\r\n        sessionStorage.setItem('color', \"\")\r\n        sessionStorage.setItem('font', \"\")\r\n        sessionStorage.setItem('body', \"\")\r\n    }\r\n\r\n    const thisLoad = () => {\r\n        var r = sessionStorage.getItem('color')\r\n        var f = sessionStorage.getItem('font')\r\n        var b = sessionStorage.getItem('body')\r\n        setbody(b)\r\n        setFont(f)\r\n        setBack(r)\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div onLoad={thisLoad} style={{ backgroundColor: body }}  >\r\n            <Navbar style={{ backgroundColor: back }} className=\"nav\" id=\"teststyle\" variant=\"light\" >\r\n                <Navbar.Brand href=\"#home\" style={{ color: \"black\" }}><img className=\"logo\" src={logo} alt=\"\" /></Navbar.Brand>\r\n                <Nav className=\"mr-auto\" >\r\n                    <Nav.Link className=\"navB\" style={{ color: font }} onClick={clearSeassion}><Link className=\"navB\" style={{ color: font }} to=\"/\">log in /</Link></Nav.Link>\r\n                    <Nav.Link className=\"navB\" style={{ color: font }}><Link className=\"navB\" style={{ color: font }} to=\"/Register\">sign in /</Link></Nav.Link>\r\n\r\n                </Nav>\r\n            </Navbar>\r\n            <Jumbotron className=\"section\" fluid>\r\n                <Container>\r\n                    <img src={jumb} className=\"jumb\" />\r\n                    <p>\r\n                        On this site every little person can be a big chef !\r\n                    </p>\r\n                </Container>\r\n            </Jumbotron>\r\n            <Jumbotron fluid>\r\n\r\n                <h1>about us</h1>\r\n                <p className=\"aboutP\" >\r\n                    :סיטואציה <br />\r\n                ?האישה ביקשה ממך להכין ארוחת ערב <br />\r\n                \"לא ידעת מה להכין וכששאלת את אישתך היא ענתה בקול מיואש \"אין לי מושג  <br />\r\n               ? נכנסת לאינטרנט וראית מגוון מתכונים ומרוב התלבטות לא ידעת מה לבחור<br />\r\n                אמרת בליבך שהיום תכין  מתכון אחד שמצאת ויום למחרת את המתכון השני שמצאת <br />\r\n                ? הגיע מחר ולצערך הרב לא מצאת את המתכון שמצאת אתמול <br />\r\n                    <br />\r\n                    <p className=\"aboutP1\">\r\n                        בידיוק בשביל זה אנחנו כאן <br />\r\n               באתר זה תוכל לשמור מגוון רחב של מתכונים בדף פרטי משלך כך שלעולם לא יעלמו לך מתכונים <br />\r\n               תוכל לערוך את הדף שלך כפי רצונך , להוסיף ולהסיר מתכונים לבחירתך<br />\r\n               תוכל למצוא באתר זה מגוון רחב של מתכונים <br />\r\n               ארוחות בוקר , צהרים , ערב , קינוחים , עוגות , שייקים , ארוחות ילדים ועוד<br />\r\n               אז כל שנותר מאיתנו זה לאחל לך גלישה נעימה באתרנו <br/>\r\n               !!! אז תהנוו\r\n\r\n                    </p>\r\n\r\n                </p>\r\n\r\n            </Jumbotron>\r\n\r\n            <div style={{ backgroundColor: back }} id=\"teststyle1\" className=\"footer\">\r\n                <MDBFooter className=\"font-small pt-4 mt-4\">\r\n                    <MDBContainer fluid className=\"text-center text-md-left\">\r\n                        <MDBRow>\r\n                            <MDBCol className=\"fotercolor\" md=\"6\">\r\n                                <h5 className=\"title\" style={{ color: font }}>check recipes</h5>\r\n                                <p style={{ color: font }}>\r\n                                    On this site every little person can be a big chef !\r\n                               </p>\r\n                            </MDBCol>\r\n\r\n                        </MDBRow>\r\n                    </MDBContainer>\r\n                    <div className=\"copyritght\">\r\n                        <MDBContainer fluid style={{ color: font }}>\r\n                            &copy; {new Date().getFullYear()} Copyright: ron tayeb\r\n                        </MDBContainer>\r\n                    </div>\r\n                </MDBFooter>\r\n            </div>\r\n\r\n        </div>\r\n\r\n\r\n    );\r\n};\r\n\r\n\r\nexport default About;\r\n",{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","severity":1,"message":"110","line":2,"column":10,"nodeType":"111","messageId":"112","endLine":2,"endColumn":16},{"ruleId":"109","severity":1,"message":"113","line":8,"column":8,"nodeType":"111","messageId":"112","endLine":8,"endColumn":12},{"ruleId":"114","severity":1,"message":"115","line":35,"column":13,"nodeType":"111","messageId":"116","endLine":35,"endColumn":17},{"ruleId":"114","severity":1,"message":"117","line":79,"column":11,"nodeType":"111","messageId":"116","endLine":79,"endColumn":18},{"ruleId":"114","severity":1,"message":"117","line":123,"column":11,"nodeType":"111","messageId":"116","endLine":123,"endColumn":18},{"ruleId":"109","severity":1,"message":"118","line":1,"column":17,"nodeType":"111","messageId":"112","endLine":1,"endColumn":26},{"ruleId":"109","severity":1,"message":"119","line":1,"column":28,"nodeType":"111","messageId":"112","endLine":1,"endColumn":37},{"ruleId":"109","severity":1,"message":"120","line":2,"column":10,"nodeType":"111","messageId":"112","endLine":2,"endColumn":20},{"ruleId":"109","severity":1,"message":"110","line":4,"column":10,"nodeType":"111","messageId":"112","endLine":4,"endColumn":16},{"ruleId":"109","severity":1,"message":"121","line":4,"column":18,"nodeType":"111","messageId":"112","endLine":4,"endColumn":22},{"ruleId":"122","severity":1,"message":"123","line":164,"column":21,"nodeType":"124","endLine":164,"endColumn":56},{"ruleId":"122","severity":1,"message":"123","line":80,"column":25,"nodeType":"124","endLine":80,"endColumn":60},{"ruleId":"109","severity":1,"message":"110","line":3,"column":10,"nodeType":"111","messageId":"112","endLine":3,"endColumn":16},{"ruleId":"122","severity":1,"message":"123","line":61,"column":13,"nodeType":"124","endLine":61,"endColumn":48},{"ruleId":"122","severity":1,"message":"123","line":75,"column":13,"nodeType":"124","endLine":75,"endColumn":48},{"ruleId":"109","severity":1,"message":"118","line":1,"column":17,"nodeType":"111","messageId":"112","endLine":1,"endColumn":26},{"ruleId":"109","severity":1,"message":"110","line":3,"column":10,"nodeType":"111","messageId":"112","endLine":3,"endColumn":16},{"ruleId":"109","severity":1,"message":"125","line":3,"column":66,"nodeType":"111","messageId":"112","endLine":3,"endColumn":70},{"ruleId":"126","severity":1,"message":"127","line":33,"column":19,"nodeType":"128","messageId":"129","endLine":33,"endColumn":21},{"ruleId":"126","severity":1,"message":"130","line":33,"column":38,"nodeType":"128","messageId":"129","endLine":33,"endColumn":40},{"ruleId":"131","severity":1,"message":"132","line":42,"column":6,"nodeType":"133","endLine":42,"endColumn":13,"suggestions":"134"},{"ruleId":"126","severity":1,"message":"127","line":52,"column":16,"nodeType":"128","messageId":"129","endLine":52,"endColumn":18},{"ruleId":"122","severity":1,"message":"123","line":110,"column":11,"nodeType":"124","endLine":110,"endColumn":46},{"ruleId":"135","severity":1,"message":"136","line":124,"column":11,"nodeType":"124","endLine":124,"endColumn":41},{"ruleId":"137","severity":1,"message":"138","line":127,"column":11,"nodeType":"124","endLine":127,"endColumn":58},{"ruleId":"139","severity":1,"message":"140","line":127,"column":11,"nodeType":"124","endLine":127,"endColumn":58},{"ruleId":"109","severity":1,"message":"118","line":1,"column":17,"nodeType":"111","messageId":"112","endLine":1,"endColumn":26},{"ruleId":"109","severity":1,"message":"119","line":1,"column":28,"nodeType":"111","messageId":"112","endLine":1,"endColumn":37},{"ruleId":"109","severity":1,"message":"110","line":3,"column":10,"nodeType":"111","messageId":"112","endLine":3,"endColumn":16},{"ruleId":"109","severity":1,"message":"141","line":4,"column":10,"nodeType":"111","messageId":"112","endLine":4,"endColumn":14},{"ruleId":"109","severity":1,"message":"142","line":3,"column":58,"nodeType":"111","messageId":"112","endLine":3,"endColumn":67},{"ruleId":"122","severity":1,"message":"123","line":102,"column":13,"nodeType":"124","endLine":102,"endColumn":48},{"ruleId":"109","severity":1,"message":"118","line":1,"column":17,"nodeType":"111","messageId":"112","endLine":1,"endColumn":26},{"ruleId":"109","severity":1,"message":"119","line":1,"column":28,"nodeType":"111","messageId":"112","endLine":1,"endColumn":37},{"ruleId":"109","severity":1,"message":"120","line":2,"column":10,"nodeType":"111","messageId":"112","endLine":2,"endColumn":20},{"ruleId":"109","severity":1,"message":"110","line":4,"column":10,"nodeType":"111","messageId":"112","endLine":4,"endColumn":16},{"ruleId":"109","severity":1,"message":"121","line":4,"column":18,"nodeType":"111","messageId":"112","endLine":4,"endColumn":22},{"ruleId":"109","severity":1,"message":"143","line":4,"column":59,"nodeType":"111","messageId":"112","endLine":4,"endColumn":64},{"ruleId":"109","severity":1,"message":"144","line":4,"column":66,"nodeType":"111","messageId":"112","endLine":4,"endColumn":71},{"ruleId":"109","severity":1,"message":"145","line":4,"column":73,"nodeType":"111","messageId":"112","endLine":4,"endColumn":76},{"ruleId":"109","severity":1,"message":"146","line":4,"column":78,"nodeType":"111","messageId":"112","endLine":4,"endColumn":81},{"ruleId":"122","severity":1,"message":"123","line":46,"column":21,"nodeType":"124","endLine":46,"endColumn":56},"no-native-reassign",["147"],"no-negated-in-lhs",["148"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'logo' is defined but never used.","no-redeclare","'user' is already defined.","redeclared","'newUser' is already defined.","'Component' is defined but never used.","'useEffect' is defined but never used.","'withRouter' is defined but never used.","'Form' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Fade' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getRecipes'. Either include it or remove the dependency array.","ArrayExpression",["149"],"jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'Link' is defined but never used.","'CardGroup' is defined but never used.","'Modal' is defined but never used.","'Image' is defined but never used.","'Col' is defined but never used.","'Row' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"150","fix":"151"},"Update the dependencies array to be: [getRecipes, query]",{"range":"152","text":"153"},[1543,1550],"[getRecipes, query]"]